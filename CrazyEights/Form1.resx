<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh6auR4emv8eHpr/Hh6a/x4e
        mv8eHpr/Hh6a/x4emv8eHpr/Hh6a/x4emv8eHpr/Hh6a/x4emv8eHpr/Hh6a/x4emiwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJiaswisr
        uP8rK7j/Kyu4/ysruP8rK7j/Kyu4/ysruP8rK7j/Kyu4/ysruP8rK7j/Kyu4/yoquP8lJaqQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKSm1eTQ0zvo4ONf/ODjX/zg41/84ONf/ODjX/zg41/84ONf/ODjX/zg41/81NdD8KSm1eQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIyOmBCQkqYMmJq7ZKCiz+Coqtv4qKrj/Kiq2/ikptPknJ6/eJSWqlyMj
        pgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////z///+AD///AAP//gAB//wAAP/8H+D//D/w//g/8P/4P/
        B//D/w//w/8P/8H+D//g/A//8AAf//gAP//4AH//8AB//+AAP//g/B//4f4f/8H+D//h/h//4P4f/+AA
        H//wAB//+AA///4A////7/////////////8=
</value>
  </data>
</root>